name: Test on Windows
on:
  push:
    paths:
      - "**"
      - "!*.md"
      - "!.github"
      - ".github/workflows/ci-windows.yml"
    branches:
      - master
      - "releases/**"
    tags-ignore:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_call:
    inputs:
      cache-prefix:
        description: 'Cache prefix for isolation'
        required: false
        type: string
        default: ''

permissions:
  contents: read
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        node: [18, 20, 22]
        runtime_link: [static, shared]
        # This OS does not have the ability to install liblzma globally
        use_global_liblzma: [false]
        enable_threads: [yes, no]
    runs-on: ${{ matrix.os }}
    name: Node ${{ matrix.node }} on ${{ matrix.os }} / System Xz ? ${{ matrix.use_global_liblzma }} / Threading enabled ? ${{ matrix.enable_threads }} / Runtime is ${{ matrix.runtime_link }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Use node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          architecture: x64
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Setup pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pnpm\store
          key: ${{ inputs.cache-prefix }}${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Setup xz deps cache
        uses: actions/cache@v4
        with:
          path: |
            deps/xz
            deps/xz.tar.xz
          key: ${{ inputs.cache-prefix }}${{ runner.os }}-xz-${{ matrix.runtime_link }}-${{ matrix.enable_threads }}-${{ hashFiles('scripts/download_extract_deps.py') }}
          restore-keys: |
            ${{ runner.os }}-xz-${{ matrix.runtime_link }}-${{ matrix.enable_threads }}-
      - name: Install
        run: pnpm install --frozen-lockfile
        env:
          USE_GLOBAL: ${{ matrix.use_global_liblzma }}
          RUNTIME_LINK: ${{ matrix.runtime_link }}
          ENABLE_THREAD_SUPPORT: ${{ matrix.enable_threads }}
      - name: Build
        run: pnpm run build
      - name: Lint
        if: ${{ matrix.node == '20' && matrix.runtime_link == 'static' && matrix.enable_threads == 'no' }}
        run: pnpm run check
      - name: Test
        run: pnpm test
