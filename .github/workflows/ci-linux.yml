name: Test on Linux
on:
  push:
    paths:
      - "!*.md"
      - "!.github"
      - ".github/workflows/ci-linux.yml"
    branches:
      - master
      - "releases/**"
    tags-ignore:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - master
      - "releases/**"

permissions:
  contents: read
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # At the time of writing macos-latest is mac 10; we need 11 to build a universal binary.
        os: [ubuntu-latest]
        node: [16]
        runtime_link: [static, shared]
        use_global_liblzma: [true, false]
        enable_threads: [no]
    runs-on: ${{ matrix.os }}
    name: Node ${{ matrix.node }} / System Xz ? ${{ matrix.use_global_liblzma }} / Threading enabled ? ${{ matrix.enable_threads }} / Runtime is ${{ matrix.runtime_link }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Use node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          architecture: x64
      - name: Install
        run: yarn install
        env:
          USE_GLOBAL: ${{ matrix.use_global_liblzma }}
          RUNTIME_LINK: ${{ matrix.runtime_link }}
          ENABLE_THREAD_SUPPORT: ${{ matrix.enable_threads }}
      - name: Test
        run: yarn test

  prereq:
    uses: './.github/workflows/ci-checkprereq.yml'
    with:
      os: ubuntu-latest

  test-mt:
    needs: prereq
    strategy:
      fail-fast: false
      matrix:
        # At the time of writing macos-latest is mac 10; we need 11 to build a universal binary.
        os: [ubuntu-latest]
        node: [16]
        runtime_link: [static, shared]
        use_global_liblzma: [true, false]
        enable_threads: [yes]
    runs-on: ${{ matrix.os }}
    name: Node ${{ matrix.node }} / System Xz ? ${{ matrix.use_global_liblzma }} / Threading enabled ? ${{ matrix.enable_threads }} / Runtime is ${{ matrix.runtime_link }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Use node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          architecture: x64
      - name: debug
        run: |
          echo static-has-mt: ${{ needs.prereq.outputs.static-has-mt }}
          echo shared-has-mt: ${{ needs.prereq.outputs.static-has-mt }}
      - name: Install
        if: "!matrix.use_global_liblzma && matrix.use_global_liblzma == 'false' || (matrix.runtime_link == 'static' && needs.prereq.outputs.static-has-mt) || (matrix.runtime_link == 'shared' && needs.prereq.outputs.shared-has-mt)"
        run: yarn install
        env:
          USE_GLOBAL: ${{ matrix.use_global_liblzma }}
          RUNTIME_LINK: ${{ matrix.runtime_link }}
          ENABLE_THREAD_SUPPORT: ${{ matrix.enable_threads }}
      - name: Test
        if: "!matrix.use_global_liblzma && matrix.use_global_liblzma == 'false' || (matrix.runtime_link == 'static' && needs.prereq.outputs.static-has-mt && needs.prereq.outputs.static-has-mt != 'false') || (matrix.runtime_link == 'shared' && needs.prereq.outputs.shared-has-mt && needs.prereq.outputs.shared-has-mt != 'false')"
        run: yarn test
