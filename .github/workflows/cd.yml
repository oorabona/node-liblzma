name: Publish node-liblzma

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build:
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - os: macos-latest
            build-group: darwin-x64+arm64
          - os: windows-latest
            build-group: win-x64
          - os: ubuntu-latest
            build-group: linux-x64
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.build-group }}
    env:
      BUILD_GROUP: ${{ matrix.build-group }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          architecture: x64
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
      - name: Prebuildify for Windows
        if: ${{ matrix.build-group == 'win-x64' }}
        run: pnpm run prebuildify:win
      - name: Prebuildify for non-Windows
        if: ${{ matrix.build-group != 'win-x64' }}
        run: pnpm run prebuildify
      - name: Prepare artifact
        run: tar -zcvf $BUILD_GROUP.tar.gz -C prebuilds .
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_GROUP }}
          path: ${{ env.BUILD_GROUP }}.tar.gz
          retention-days: 1
  publish:
    needs: build
    permissions:
      contents: write
    name: Publish node-liblzma
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Unzip all binaries
        run: mkdir prebuilds && find artifacts -name "*.tar.gz" -exec tar zxvf {} -C prebuilds \;
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
      - name: Set version from branch name
        run: pnpm version --no-git-tag-version "${GITHUB_REF##refs/tags/v}"
      - name: Go publish
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}
  release:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/*/*.tar.gz
          generate_release_notes: true
